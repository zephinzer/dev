image: golang:1.14
stages:
  - init
  - test & build
  - release
  - package
  - publish

.default_script:
  script: ["entrypoint"]
.go_linux:
  variables:
    GOOS: linux
    GOARCH: amd64
.go_macos:
  variables:
    GOOS: darwin
    GOARCH: amd64
.go_windows:
  variables:
    GOOS: windows
    GOARCH: "386"

init:
  stage: init
  image: usvc/ci:go-dependencies
  extends: .default_script
  cache:
    key: ${CI_COMMIT_REF_NAME}
    paths: ["./vendor"]
  artifacts:
    paths: ["./vendor"]

unit test:
  stage: test & build
  image: usvc/ci:go-test
  extends: .default_script
  dependencies: ["init"]
  artifacts:
    paths: ["./c.out"]

.build:
  stage: test & build
  image: usvc/ci:go-build-production
  extends: .default_script
  dependencies: ["init"]
  artifacts:
    paths: ["./bin/*"]
  variables:
    BIN_NAME: dev
  before_script:
    - make setup_build
    - git fetch
build linux (test):
  extends: [.build, .go_linux]
  only: ["master"]
build linux:
  extends: [.build, .go_linux]
  only: ["tags"]
build macos (test):
  extends: [.build, .go_macos]
  only: ["master"]
build macos:
  extends: [.build, .go_macos]
  only: ["tags"]
build windows (test):
  extends: [.build, .go_windows]
  only: ["master"]
build windows:
  extends: [.build, .go_windows]
  only: ["tags"]

coverage report:
  allow_failure: true
  stage: release
  dependencies: ["unit test"]
  image: usvc/ci:go-coverage-code-climate
  script: ["entrypoint"]

version bump:
  stage: release
  only: ["master"]
  image: usvc/ci:version-bump-gitlab
  script: ["entrypoint"]

coverage report:
  allow_failure: true
  stage: release
  dependencies: ["unit test"]
  image: usvc/ci:go-coverage-code-climate
  script: ["entrypoint"]

.compress:
  stage: package
  only: ["tags"]
  extends: .default_script
  allow_failure: true
  artifacts:
    paths: ["./bin/*"]
compress linux:
  extends: [.compress, .go_linux]
  dependencies: ["build linux"]
compress macos:
  extends: [.compress, .go_macos]
  dependencies: ["build macos"]
compress windows:
  extends: [.compress, .go_windows]
  dependencies: ["build windows"]

dockerize:
  stage: package
  image: usvc/ci:docker-build
  extends: .default_script
  allow_failure: true
  only: ["tags"]
  services: ["docker:19.03.1-dind"]
  artifacts:
    paths: ["./build/*"]

dockerhub:
  stage: publish
  image: usvc/ci:docker-publish-1ad4294f
  extends: .default_script
  allow_failure: true
  only: ["tags"]
  services: ["docker:19.03.1-dind"]
  dependencies: ["dockerize"]
